import{noop,safe_not_equal,get_store_value}from"./internals";const subscriber_queue=[];export function readable(e,u){return{subscribe:writable(e,u).subscribe}}export function writable(e,u=noop){let t=null;const n=[];function r(u){if(safe_not_equal(e,u)&&(e=u,t)){const u=!subscriber_queue.length;for(let u=0;u<n.length;u+=1){const t=n[u];t[1](),subscriber_queue.push(t,e)}if(u){for(let e=0;e<subscriber_queue.length;e+=2)subscriber_queue[e][0](subscriber_queue[e+1]);subscriber_queue.length=0}}}return{set:r,update:function(u){r(u(e))},subscribe:function(s,o=noop){const l=[s,o];return n.push(l),1===n.length&&(t=u(r)||noop),s(e),()=>{const e=n.indexOf(l);-1!==e&&n.splice(e,1),0===n.length&&null!==t&&(t(),t=null)}}}}export{get_store_value as get};